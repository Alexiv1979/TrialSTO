		  
			  
&НаКлиенте
Процедура СделатьФото(Команда)
	
	 ДанныеФото = ПолучитьДанныеФотоСнимка();    
	 
	 ЗаписатьВРегистрСведений(ДанныеФото);


КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьАудио(Команда)
	ДанныеАудио = ПолучитьДанныеАудио();   
	ЗаписатьВРегистрСведений(ДанныеАудио);

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВидео(Команда)
	ДанныеВидео = ПолучитьДанныеВидео();     
	
	ЗаписатьВРегистрСведений(ДанныеВидео);

КонецПроцедуры    

&НаКлиенте
Процедура ЗаписатьВРегистрСведений(ДанныеФайла)   
	Если ДанныеФайла <> Неопределено Тогда 
 
		ДвоичныеДанные= ДанныеФайла.ПолучитьДвоичныеДанные();  		
		СтруктураОписанияОбъекта = Новый Структура("РасширениеФайла, ТипСодержимого, ДвоичныеДанные",  ДанныеФайла.РасширениеФайла, ДанныеФайла.ТипСодержимого, ДвоичныеДанные);
		РезультатДобавления = ЗаписатьВРегистрСведенийНаСервере(ЗначениеОтбораОбъект, СтруктураОписанияОбъекта);

		
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры      

&НаСервереБезКонтекста
Функция ЗаписатьВРегистрСведенийНаСервере(ЗначениеОтбораОбъект, СтруктураОписанияОбъекта)
	Возврат РегистрыСведений.КартинкиИФайлы.ДобавленаЗаписьВРегистрСведений(ЗначениеОтбораОбъект, СтруктураОписанияОбъекта);     	      
	
КонецФункции
		



&НаСервере   
Функция ПолучитьЗначениеКонстанты(ИмяКонстанты)      
	 Возврат ОбщегоНазначенияКлиентСервер.ПолучитьЗначениеКонстанты(ИмяКонстанты);     
 КонецФункции       
 
 &НаСервереБезКонтекста
 Функция ПолучитьДанныеОбъекта(ЗначениеОтбораОбъект)                     
	 Возврат Новый Структура("ГУИД", СокрЛП(ЗначениеОтбораОбъект.ГУИД));	 
КонецФункции	 
		
 
 &НаКлиенте
Функция ПолучитьЗначениеОтбораОбъект()
	 
	Для Каждого ЭлементОтбора ИЗ ЭтотОбъект.Список.Отбор.Элементы Цикл    

		Если Строка(ЭлементОтбора.ЛевоеЗначение) = "Объект" Тогда
			Возврат  ЭлементОтбора.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	 
КонецФункции


&НаКлиенте
Функция ПолучитьДанныеФотоСнимка()

         Данные = Неопределено;

        #Если МобильноеПриложениеКлиент Тогда 
 
             Если СредстваМультимедиа.ПоддерживаетсяФотоснимок() Тогда

				   //ТипКамерыДанные = ОбщегоНазначенияСервер.ПолучитьЗначениеКонстанты("ТипКамеры");
				   //Если ТипКамерыДанные = ПредопределенноеЗначение("Перечисление.ТипКамеры.Задняя")   Тогда
                        ТипКамеры = ТипКамерыУстройства.Задняя;
				   //ИначеЕсли ТипКамерыДанные =  ПредопределенноеЗначение("Перечисление.ТипКамеры.Передняя") Тогда
				   //     ТипКамеры = ТипКамерыУстройства.Передняя;
				   //Иначе
				   //     ТипКамеры = ТипКамерыУстройства.Авто;
				   //КонецЕсли;

                  РазрешениеВысота = ПолучитьЗначениеКонстанты("РазрешениеФотоВысота");
                  РазрешениеШирина = ПолучитьЗначениеКонстанты("РазрешениеФотоШирина");

                 //для устройств IOS этот параметр игнорируется
                 пКачество = ПолучитьЗначениеКонстанты("КачествоФото");
                 Если пКачество = 0 Тогда
                      пКачество = 100;
                 КонецЕсли;

                 Если РазрешениеВысота <> 0 И РазрешениеШирина <> 0 Тогда
                       РазрешениеКамеры = Новый РазрешениеКамерыУстройства;
                       РазрешениеКамеры.Высота = РазрешениеВысота;
                       РазрешениеКамеры.Ширина = РазрешениеШирина;
                       Данные = СредстваМультимедиа.СделатьФотоснимок(ТипКамеры, РазрешениеКамеры, пКачество); 

                 Иначе
                       Данные = СредстваМультимедиа.СделатьФотоснимок(ТипКамеры, , пКачество); 
                 КонецЕсли; 

              	  Возврат Данные; 
                Иначе 
                    Сообщить("Данное устройство не поддерживает фотоснимок!") 
                КонецЕсли; 
 
                #КонецЕсли

               Возврат Данные;

		   КонецФункции                  

		   
&НаКлиенте
Функция ПолучитьДанныеАудио()

         Данные = Неопределено;

        #Если МобильноеПриложениеКлиент Тогда 
 
			Если СредстваМультимедиа.ПоддерживаетсяАудиозапись() Тогда  
				
				Данные = СредстваМультимедиа.СделатьАудиозапись(, Истина, Истина);          
				
			  	
			 			 
			 
				//Оповещение = Новый ОписаниеОповещения("ПослеОстановкиЗаписиАудио", ЭтотОбъект, Параметры);

				//	
				//СредстваМультимедиа.ВключитьАудиозапись(Оповещение, , РасположениеКнопкиОстановкиЗаписиМультимедиа.Авто);

				
			КонецЕсли; 
 
                #КонецЕсли

            Возврат Данные;
		КонецФункции   
		
		
&НаСервереБезКонтекста
Функция ПолучитьКачествоВидеоСтрокой()    
	ВремКачествоВидеозаписи = Константы.КачествоВидезаписи.Получить();   
	
	Если ВремКачествоВидеозаписи = Перечисления.КачествоВидеозаписи.Низкое Тогда  
		Возврат "Низкое";
	ИначеЕсли ВремКачествоВидеозаписи = Перечисления.КачествоВидеозаписи.Высокое Тогда  
		Возврат "Высокое";
	Иначе
		Возврат "Авто";
	КонецЕсли;            
	             
	
КонецФункции

&НаКлиенте
Функция ПолучитьДанныеВидео()
	
	Данные = Неопределено;
	
	#Если МобильноеПриложениеКлиент Тогда 
		
		Если СредстваМультимедиа.ПоддерживаетсяВидеозапись() Тогда     
			
			КачествоВидеозаписиЗначение = КачествоВидеозаписи.Авто;
			КачествоВидеозаписиЗначениеСтрокой = ПолучитьКачествоВидеоСтрокой();
			
			
			Если КачествоВидеозаписиЗначениеСтрокой = "Низкое" Тогда 			
				КачествоВидеозаписиЗначение = КачествоВидеозаписи.Низкое;
			ИначеЕсли КачествоВидеозаписиЗначениеСтрокой = "Высокое" Тогда 			
				КачествоВидеозаписиЗначение = КачествоВидеозаписи.Высокое;
			КонецЕсли;          			
				
			Данные = СредстваМультимедиа.СделатьВидеозапись(ТипКамерыУстройства.Авто, КачествоВидеозаписиЗначение);    
			
		КонецЕсли; 
		
	#КонецЕсли
	
	Возврат Данные;
	
КонецФункции   

//  &НаКлиенте
//  Процедура ПослеОстановкиЗаписиАудио(ДанныеАудио, Параметры) Экспорт  
//	  
//	  
//	 Если ДанныеАудио <> Неопределено Тогда              
//		 
//		 // Добавить даннеые в регистр сведений   
//		 ТекущееАудио= ДанныеАудио.ПолучитьДвоичныеДанные(); 
//		 
//		  СтруктураОписанияОбъекта = Новый Структура("РасширениеФайла, ТипСодержимого, ДвоичныеДанные",  ДанныеАудио.РасширениеФайла, ДанныеАудио.ТипСодержимого, ТекущееАудио);
//		 РезультатДобавления = ДобавленаЗаписьВРегистрСведений(ЗначениеОтбораОбъект, СтруктураОписанияОбъекта);       

//		 

//	КонецЕсли;
//	//Если ВыбЗнач<>Неопределено Тогда        
//	//	
//	//	Если Параметры.Свойство("ИмяЭлемента") Тогда         
//	//     	Объект.ПроведениеОсмотра[Элементы.ПроведениеОсмотра.ТекущаяСтрока][Параметры.ИмяЭлемента] = ВыбЗнач;           
//	//	КонецЕсли;
//	//КонецЕсли;
//КонецПроцедуры    


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ЗначениеОтбораОбъект) Тогда
   		ЗначениеОтбораОбъект = ПолучитьЗначениеОтбораОбъект();  
	КонецЕсли;
   
   Элементы.СделатьФото.Доступность =  ЗначениеЗаполнено(ЗначениеОтбораОбъект);
   Элементы.ЗаписатьВидео.Доступность =  ЗначениеЗаполнено(ЗначениеОтбораОбъект);
   Элементы.ЗаписатьАудио.Доступность =  ЗначениеЗаполнено(ЗначениеОтбораОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)   
	СтандартнаяОбработка = Ложь;
	//ДанныеКартинки =  Новый Файл(ПолноеИмяФайла);
	//	//-ВА 19.07.2023  			
	//	Если ДанныеКартинки.Существует() Тогда //И СокрЛП(ТекущиеДанные.GUID)<>"" Тогда
	//		ЭлементыФормы.ПолеПредварительногоПросмотра.Картинка = Новый Картинка(ПолноеИмяФайла);
	//	Иначе	
	//		ЭлементыФормы.ПолеПредварительногоПросмотра.Картинка = БиблиотекаКартинок.Скрепка;      
	
	АдресКартинки = ПолучитьАдресКартинки(Элемент.ТекущаяСтрока);      
	
	//Если АдресКартинки  = "" Тогда 	
	//	Элементы.ПолеПредварительногоПросмотра.Картинка= БиблиотекаКартинок.НетФото;
	//Иначе
	//	
	//	Элементы.ПолеПредварительногоПросмотра.Картинка = Новый Картинка(АдресКартинки);            //АдресКартинки;  
	//КонецЕсли; 
	

КонецПроцедуры     

&НаСервере
Функция ПолучитьАдресКартинки(ТекСтрокаРегистра)  
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КартинкиИФайлы.Объект КАК Объект,
	               |	КартинкиИФайлы.Идентификатор КАК Идентификатор,
	               |	КартинкиИФайлы.Данные КАК Данные,
	               |	КартинкиИФайлы.Картинка КАК Картинка,
	               |	КартинкиИФайлы.ИмяФайла КАК ИмяФайла,
	               |	КартинкиИФайлы.ТипФайла КАК ТипФайла
	               |ИЗ
	               |	РегистрСведений.КартинкиИФайлы КАК КартинкиИФайлы
	               |ГДЕ
	               |	КартинкиИФайлы.Объект = &Объект
	               |	И КартинкиИФайлы.Идентификатор = &Идентификатор"; 
	Запрос.УстановитьПараметр("Объект", ТекСтрокаРегистра.Объект);
	Запрос.УстановитьПараметр("Идентификатор", ТекСтрокаРегистра.Идентификатор);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	
	//
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();           
	
	ДвоичныеДанные = Выборка.Данные.Получить(); 	
	
	// Получаем расширение
	
	МассивПодстрок = ОбщегоНазначенияКлиентСервер.РазложитьСтрокуВМассивПодстрок(Выборка.ИмяФайла, "."); 
	
	РасширениеВремФайла = МассивПодстрок[МассивПодстрок.Количество() - 1];   	
	
	ПолноеИмяВремФайла  = КаталогвРеменныхФайлов() + "ВремФайл." + РасширениеВремФайла;    	          
//	Сообщить(ПолноеИмяВремФайла);
	
	ТипВремФайла = СокрЛП(Выборка.ТипФайла);
	
	Если ТипВремФайла = "" Тогда			
		Если РасширениеВремФайла = 	"m4a" Тогда
			ТипВремФайла = "audio";       
		ИначеЕсли РасширениеВремФайла = "mp4" Тогда
			ТипВремФайла = "video";       
		Иначе	
			ТипВремФайла = "image"; 
		КонецЕсли;                  
  	КонецЕсли;

		
//	Сообщить(ТипВремФайла);


	АдресКартинки = "";
	
	Если ДвоичныеДанные <> Неопределено Тогда
		ДвоичныеДанные.Записать(ПолноеИмяВремФайла);	
		Если ТипВремФайла = "audio" Тогда
			// Аудио      
			
		//	КартинкаПредПросмотр
		//	АдресКартинки = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.АудиоЗапись);        
			АдресКартинки = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ЗаписатьАудио);        
		ИначеЕсли ТипВремФайла = "video" Тогда
			// Dbltj      
			
		//	КартинкаПредПросмотр
			АдресКартинки = ПоместитьВоВременноеХранилище(БиблиотекаКартинок.ЗаписатьВидео);      
		Иначе 	          
				
			Картинка = Новый Картинка(ПолноеИмяВремФайла);           
			
			АдресКартинки = ПоместитьВоВременноеХранилище(Картинка);
		КонецЕсли;                                  
	КонецЕсли;
	
	Возврат АдресКартинки;	
	
КонецФункции

&НаКлиенте
Процедура ПолеКартинкиНажатие(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.           
	
	 #Если МобильноеПриложениеКлиент Тогда 
	    НовВз = Новый ЗапускПриложенияМобильногоУстройства();
	    НовВз.Действие="android.intent.action.VIEW";   
	   // НовВз.Данные = "file://" + ПолноеИмяВремФайла;       
	   
	    НовВз.Данные = ПолноеИмяВремФайла;   		
		НовВз.Тип = ТипВремФайла + "/*" ;    		       		 

	    НовВз.Запустить(Истина);
		//Для Каждого Стр Из НовВз.ДополнительныеДанные Цикл
		//    Сообщить(Стр.Ключ+" - "+Стр.Значение);
		//КонецЦикла;   
	#КонецЕсли           
	                                         

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)    
	
	Если ЭтаФорма.Параметры.Свойство("Объект") Тогда  
		ЗначениеОтбораОбъект = ЭтаФорма.Параметры.Объект;		
	КонецЕсли;

КонецПроцедуры

		
		
		
